<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title></title>
	<link href="/style/css/style.css" type="text/css" rel="stylesheet"/>
	<!-- 实验导航样式 -->
	
	<link rel="stylesheet" type="text/css" href="/style/css/normalize.css" />
	<link rel="stylesheet" type="text/css" href="/style/css/tabs.css" />
	<link rel="stylesheet" type="text/css" href="/style/css/tabstyles.css" />
  	<script src="/style/script/modernizr.custom.js"></script>
  	<!-- 实验列表样式 -->
	<script type="text/javascript" src="http://code.jquery.com/jquery-1.9.1.js"></script>
	<script type="text/javascript" src="/style/script/jquery.jumpto.js"></script>
	<link href='/style/css/jumpto.css' rel='stylesheet' type='text/css'>
	<link href='/style/css/jumpto2.css' rel='stylesheet' type='text/css'>
	<script>
	  $(document).ready( function() {
	    $(".page_container").jumpto({
	      firstLevel: "> h2",
	      secondLevel: "> h3"
	    });
	  });
		
	</script>

</head>
<body>
<!-- 总的导航标题 -->
<div class="header" >
	<div class="title">
		<h2>计算机信息工程学院渗透测试实验室</h2>
	</div>

	<div class="hd-menu"><a href="/index.htm" target="" >课程</a></div>
</div>
<!-- 实验课程标题 -->
<section>
	<div class="course-infos bg">
		<div class="mask"></div>
		<img src="/style/image/testbg.jpg" width="100%">
			<div class="w pr">
				<div class="path">
							<a href="/index.htm">课程</a>
							<i class="path-split">\</i>
							<a href="/testList.htm">渗透测试实验</a>
							<i class="path-split">\</i>
							<font>实验一：命令注入实验</font>
				</div>
		
				<div class="hd">
							<h2 class="1">实验一：命令注入实验</h2>
							
				</div>
			</div>		
		</div>
	</section>
<!-- 课程实验列表 -->
			<section>
				<div class="tabs tabs-style-linebox">
					<nav>
						<ul>
							<li><a href="#section-linebox-5"><span>实验指导书</span></a></li>
							<li><a href="#section-linebox-4"><span>提交实验报告</span></a></li>
							<li><a href="#section-linebox-2"><span>疑问解答</span></a></li>
							</a></li>
						</ul>
					</nav>
					<div class="content-wrap">
						<section id="section-linebox-1">
								<div class="wrapper">
							  <div class="main">
						      <div class="page_container">
						        <div class="jumpto-block">						     
						        </div>
						        <div class="jumpto-block">
						          <h2>实验目的</h2>
						       <p>						       
						          	1 通过此实验使得学生理解命令注入的基本工作原理；<br>
						          	2 增强学生的动手实践能力；<br>
						          	3 培养学生的独立学习和思考的能力；<br>
						      
						       </p>
						        </div>
						        <div class="jumpto-block">
						          <h2>预备知识</h2>
						          <h3>1基本概念</h3>
						          <p>Command Injection ,即命令注入，是一种攻击手段，黑客通过把HTML代码输入一个输入机制(如缺乏有效验证限制的数据提交表单域)来改变网页的动态生成的内容。</p>
						          <h3>2 原理</h3>
						          <p>主要由于web应用程序对用户提交的数据不加以过滤，或过滤不严，导致黑客通过利用这个漏洞将攻击命令构造成特殊命令字符串的方式，将数据提交给web程序处理，并利用该方式执行系统命令或则外部程序命令实施攻击，从而非法获得系统重要数</p>
						          <h3>3 可利用的函数</h3>
								<p>3.1、string system(string command, int &return_var)<br>
								  command 要执行的命令<br>
								return_var 存放执行命令的执行后的状态值<br>
								例：<?<br>
								$cmd = $_GET["cmd"];<br>
								system($cmd);<br>
								?><br>
								</p>
								<p> 3.2 string exec (string command, array &output, int &<br>return_var)<br>
								 output 获得执行命令输出的每一行字符串，其它参数同上<br>
								例：<?<br>
								$cmd = $_GET["cmd"];<br>
								$output = array();<br>
								exec($cmd,$output);<br>		
								while(list($key,$value)=each($output))<br>
								{echo $value."<br>";}<br>
								?><br>
								</p>
								<p> 3.3 void passthru (string command, int &return_var)<br>
								例：<?<br>
								$cmd = $_GET["cmd"];<br>
								passthru($cmd);<br>
								?><br>
								</p>
								<p>3.4 string shell_exec (string command)<br>
								例：<br>
								<?<br>
								$cmd = $_GET["cmd"];<br>
								shell_exec($cmd);<br>
								?><br>
								</p>
								<p>3.5 Eval函数会将参数字符串作为PHP程序代码来执行，用户可以将PHP代码保存成字符串的形式，然后传递给eval函数执行
								函数原型：mixed eval(string code_str)</p>
								例：<?
								$cmd = $_GET["cmd"];
								eval($cmd);
								?>
								注：这条代码在index.php中（操作实践中下载），利用结果如图
								</p>
								<P><img src="/style/image/commandinj1.jpg">></P>
								<h3>4 防御原则</h3>
								<p>
								命令注入攻击的防范：因命令注入漏洞带来的危害严重，而且这种危害完全可以避免，比如：<br>
								4.1 尽量不要执行外部应用程序或者系统命令；<br>
								4.2 使用自定义函数来实现外部应用程序或者命令执行的功；<br>
								4.3 在执行系统函数时，对传入的参数严格过滤；<br>
								</p>
						        </div>
						        <div class="jumpto-block">
						          <h2>实验环境</h2>
						          <p>浏览器/服务器环境；服务器配置：windows系统：apache+php+Mysql；
						          </p>
						        </div>
						        <div class="jumpto-block">
						          <h2>实验案例</h2>
						          <h3>步骤一</h3>
						          <p>新建test.php文档，test.php与服务器的默认主页同在一个文件夹下，并在文档中写入下面代码，或者在“操作实践“中下载test4.pphp<br>
									例：<?<br>
									$cmd = $_GET["cmd"];<br>
									system($cmd);<br>
									?><br>
									输入：127.0.0.1/test4.php?cmd=net start/<br>
									结果：cmd可以是任何系统命令<br>
									</p>
									<P><img src="/style/image/commandinj2.jpg">
									运行结果如下图：<br>
									<img src="/style/image/commandinj3.jpg">
									</P>
						  
						          <p></p>
						        </div>
						        <div class="jumpto-block">
						          <h2>实验步骤</h2>
						          <p>
						          	步骤一：从操作实践中下载test.php，代码中
									修饰符m的含义： 当这个修饰符设置之后，“行首”和“行末”就会匹配目标字符串中任意换行符之前或之后，另外， 还分别匹配目标字符串的最开始和最末尾位置<br>
									步骤二：.浏览器输入：127.0.0.1/test.php?ip=127.0.0.1 <br>
									步骤三：观察结果，详细记录在实验报告中。<br>
						          </p>
						        </div>
						        <div class="jumpto-block">
						          <h2>任务</h2>
						          <p>按上述“攻击实战”的步骤，对“漏洞介绍”中的每种函数进行实验，至少将两个函数的实验结果记录于实验报告中，并对结果进行简要分析。</p>
						        </div>
						      </div>						  
						      <div class="other">
						        <h1>总结</h1>
						        <p>以上漏洞是最原始的，因为是实验环境才会一点防备都不做，真实环境下是很难存在这么大的漏洞的。所以同学们还可以去乌云论坛查看真实的案例，一定不要局限于此，多查询资料，还有多思考，这样才能有所收获。</p> 
						      </div>				    
						    </div>
						  </div>
						</section>
						<section id="section-linebox-2"><p>
							<div class="upload-test-file" >
							<form enctype="multipart/form-data" action="/style/php/uploader.php" method="POST"> 
							<input type="hidden" name="MAX_FILE_SIZE" value="100000" /> 请选择要上传的实验报告！ </br>
							<input name="uploadedfile" type="file"  /><br /> 
							<input type="submit" value="上传实验报告" /> </form>
			   				</div></p>
							<p></p>
							<p></p>
							<p></p>
							<p></p>
							<p></p>
							<p></p>
							<p></p></section>
						<section id="section-linebox-3"><p>3</p></section>

					</div><!-- /content -->
				</div><!-- /tabs -->
			</section>

<!--底部信息 -->
<div class="footer">
	<p>copyright@whowho</p>
	<script src="/style/script/cbpFWTabs.js"></script>
		<script>
			(function() {

				[].slice.call( document.querySelectorAll( '.tabs' ) ).forEach( function( el ) {
					new CBPFWTabs( el );
				});

			})();
		</script>
</div>
</body>
</html>